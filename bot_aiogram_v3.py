import asyncio
import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import FSInputFile
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.types import ReplyKeyboardRemove



# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω
API_TOKEN = os.environ.get("BOT_TOKEN")
if not API_TOKEN:
    raise RuntimeError("BOT_TOKEN is not set")


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())
router = Router()


# --- –ö–Ω–æ–ø–∫–∏ --- #
def get_main_keyboard(after_faq=False):
    kb = ReplyKeyboardBuilder()
    kb.button(text="üìé –°–∫–∞—á–∞—Ç—å –±–µ—Å–ª–∞—Ç–Ω—ã–π PDF")
    if after_faq:
        kb.button(text="üí≥ –ö—É–ø–∏—Ç—å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π PDF (249 ‚ÇΩ)")
    else:
        kb.button(text="üìò –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏ –ø–ª–∞—Ç–Ω–æ–≥–æ PDF?")
    kb.button(text="‚ú® –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã")
    kb.button(text="üìÑ –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞")
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)

def get_return_to_menu_keyboard():
    kb = ReplyKeyboardBuilder()
    kb.button(text="üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)

def after_preview_keyboard():
    kb = ReplyKeyboardBuilder()
    kb.button(text="üìò –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏ –ø–ª–∞—Ç–Ω–æ–≥–æ PDF?")
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)

def get_buy_or_back_keyboard():
    kb = ReplyKeyboardBuilder()
    kb.button(text="üí≥ –ö—É–ø–∏—Ç—å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π PDF (249 ‚ÇΩ)")
    kb.button(text="üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)

def get_payment_button():
    kb = InlineKeyboardBuilder()
    kb.button(text="üí≥ –ö—É–ø–∏—Ç—å (249 ‚ÇΩ)", url="https://boosty.to/your-link")  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é —Å—Å—ã–ª–∫—É
    return kb.as_markup()

# --- –≠—Ç–∞–ø 1: FAQ-–±–ª–æ–∫ 1 (5 –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π) --- #
faq_stage_1 = {
    "faq_use": "üìò –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π! –í–Ω—É—Ç—Ä–∏ PDF –µ—Å—Ç—å –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ‚Äî —Ç—ã –ª–µ–≥–∫–æ —Ä–∞–∑–±–µ—Ä—ë—à—å—Å—è, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–æ–≤–∏—á–æ–∫.",
    "faq_price": "üìå –ü—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å: —Ç—ã —Ö–æ—á–µ—à—å —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –¥–µ—Å—è—Ç–∫–∏ —á–∞—Å–æ–≤ –∏ –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –ò–ò ‚Äî –∏–ª–∏ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å 249 ‚ÇΩ?\n\n"
                 "–¢—ã –ø–æ–ª—É—á–∞–µ—à—å –Ω–∞–±–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ–Ω—è–µ—Ç —Ç–µ–±–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞, —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç–∞ –∏ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∞ –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ.",
    "faq_examples": "<b>üí° –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–º–ø—Ç–∞:</b>\n"
    "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 5 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è Reels (–¥–æ 30 —Å–µ–∫), –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–¥–≤–∏–≥–∞—é—Ç [–ø—Ä–æ–¥—É–∫—Ç/—ç–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç—å] –≤ Instagram.\n\n"
    "–ö–∞–∂–¥—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–æ–ª–∂–µ–Ω:\n"
    "‚Äì –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å ¬´–∫—Ä—é—á–∫–∞¬ª –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–æ–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞: [–±–æ–ª—å]\n"
    "‚Äì —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–¥–Ω—É –∫–ª—é—á–µ–≤—É—é –º—ã—Å–ª—å, –∫–æ—Ç–æ—Ä–∞—è –ª–æ–º–∞–µ—Ç —à–∞–±–ª–æ–Ω\n"
    "‚Äì –∑–∞–≤–µ—Ä—à–∞—Ç—å—Å—è –ª—ë–≥–∫–∏–º CTA –±–µ–∑ –¥–∞–≤–ª–µ–Ω–∏—è\n"
    "‚Äì –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: [—Å–µ–ª—Ñ–∏ / b-roll / voiceover / —ç–∫—Ä–∞–Ω]\n\n"
    "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏ —Å—Ç–∏–ª—å –ø–æ–¥–∞—á–∏ –∏ 1‚Äì2 –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ö–µ—à—Ç–µ–≥–∞ –ø–æ–¥ –∫–∞–∂–¥—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π.",
    "faq_bonus": "üéÅ –ë–æ–Ω—É—Å ‚Äî —ç—Ç–æ —á–µ–∫–ª–∏—Å—Ç ¬´–ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ–¥—É–∫—Ç —Å –ò–ò¬ª ‚Äî –ø–æ—à–∞–≥–æ–≤—ã–π –º–∏–Ω–∏-–ø–ª–∞–Ω –∑–∞–ø—É—Å–∫–∞.",
    "faq_later": "‚è± –ö–æ–Ω–µ—á–Ω–æ, –º–æ–∂–Ω–æ. –ù–æ –±–æ–Ω—É—Å –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —Å–µ–π—á–∞—Å ‚Äî –ø–æ—Ç–æ–º –æ–Ω –±—É–¥–µ—Ç –ø—Ä–æ–¥–∞–≤–∞—Ç—å—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ."
}

# --- –≠—Ç–∞–ø 2: FAQ-–±–ª–æ–∫ 2 (4 –¥–æ–ø. –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è) --- #
faq_stage_2 = {
    "faq_newbie": "üß© –¢—ã –º–æ–∂–µ—à—å –±—ã—Ç—å –Ω–æ–≤–∏—á–∫–æ–º ‚Äî –Ω–æ –ø—Ä–æ–º–ø—Ç—ã —Å–¥–µ–ª–∞–Ω—ã —Ç–∞–∫, —á—Ç–æ–±—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è –ª—é–±–æ–π.",
    "faq_result": "üéØ –£–∂–µ —Å –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –º–æ–∂–Ω–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å 30‚Äì60 –º–∏–Ω—É—Ç –∏–ª–∏ –ø—Ä–∏–¥—É–º–∞—Ç—å –∏–¥–µ—é.",
    "faq_risk": "üìé –ù–∏–∫–∞–∫–∏—Ö —Ä–∏—Å–∫–æ–≤: —Ç—ã –ø—Ä–æ—Å—Ç–æ —Å–∫–∞—á–∏–≤–∞–µ—à—å PDF. –ë–µ–∑ –ø–æ–¥–ø–∏—Å–æ–∫, –±–µ–∑ –Ω–∞–≤—è–∑—ã–≤–∞–Ω–∏—è.",
    "faq_value": "üìà –î–∞–∂–µ 1 –∏–¥–µ—è –∏–∑ 50 –º–æ–∂–µ—Ç –¥–∞—Ç—å —Ç–µ–±–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—à–µ 249 ‚ÇΩ. –≠—Ç–æ –≤—ã–≥–æ–¥–Ω–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è."
}

# --- –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–∑ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∫–ª—é—á–µ–π --- #
def generate_faq_keyboard(keys_left):
    kb = InlineKeyboardBuilder()
    for key in keys_left:
        label = {
            "faq_use": "ü§î –ö–∞–∫ —ç—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?",
            "faq_price": "üí∏ –ü–æ—á–µ–º—É —ç—Ç–æ —Å—Ç–æ–∏—Ç 249 ‚ÇΩ?",
            "faq_examples": "‚ùì –ï—Å—Ç—å –µ—â—ë –ø—Ä–∏–º–µ—Ä—ã?",
            "faq_bonus": "üéÅ –ß—Ç–æ –∑–∞ –±–æ–Ω—É—Å?",
            "faq_later": "‚è± –ê –µ—Å–ª–∏ –∫—É–ø–∏—Ç—å –ø–æ–∑–∂–µ?",
            "faq_newbie": "üë∂ –Ø –Ω–æ–≤–∏—á–æ–∫ ‚Äî –ø–æ–¥–æ–π–¥—ë—Ç?",
            "faq_result": "üìä –ê —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ—á–Ω–æ –±—É–¥–µ—Ç?",
            "faq_risk": "üõë –ê –µ—Å–ª–∏ –Ω–µ –ø–æ–¥–æ–π–¥—ë—Ç?",
            "faq_value": "üí° –ê –≤ —á—ë–º —Ü–µ–Ω–Ω–æ—Å—Ç—å?"
        }.get(key, key)
        kb.button(text=label, callback_data=key)
    kb.adjust(1)
    return kb.as_markup()

# --- –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è --- #
faq_state = {}  # {user_id: {"stage": 1, "answered": []}}

# --- –•–µ–Ω–¥–ª–µ—Ä—ã --- #
@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ. –ü–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π PDF —Å 10 –ø—Ä–æ–º–ø—Ç–∞–º–∏ –∏ –Ω–∞—á–Ω–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!",
        reply_markup=get_main_keyboard()
    )

@router.message(lambda msg: msg.text == "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
async def return_to_main(message: Message):
    user_id = message.from_user.id
    is_faq_done = faq_state.get(user_id, {}).get("finished", False)

    await message.answer(
        "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=get_main_keyboard(after_faq=is_faq_done)
    )



@router.message(lambda msg: msg.text == "üìé –°–∫–∞—á–∞—Ç—å –±–µ—Å–ª–∞—Ç–Ω—ã–π PDF")
async def send_pdf(message: Message):
    file = FSInputFile("data/10 –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è ChatGPT.pdf", filename="10 –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è ChatGPT.pdf")
    await message.answer_document(
        document=file,
        caption="‚úÖ –í–æ—Ç —Ç–≤–æ–π PDF —Å 10 AI-–ø—Ä–æ–º–ø—Ç–∞–º–∏!"
    )
    await message.answer(
        "üìò –•–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ –≤–Ω—É—Ç—Ä–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –Ω–∞ 50+ –ø—Ä–æ–º–ø—Ç–æ–≤?\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
        reply_markup=after_preview_keyboard()
    )

@router.message(lambda msg: msg.text == "üìÑ –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞")
async def send_public_offer(message: Message):
    await message.answer(
        'üßæ <b>–ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞</b> –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ —Å—Å—ã–ª–∫–µ:\n\n'
        '<a href="https://telegra.ph/Publichnaya-oferta--AI-Laboratoriya-05-08">–û—Ç–∫—Ä—ã—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç</a>',
        parse_mode=ParseMode.HTML
    )

# --- –•–µ–Ω–¥–ª–µ—Ä: –æ–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞—Ç–Ω–æ–≥–æ PDF + —Å—Ç–∞—Ä—Ç FAQ-–±–ª–æ–∫–∞ --- #
@router.message(lambda msg: msg.text == "üìò –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏ –ø–ª–∞—Ç–Ω–æ–≥–æ PDF?")
async def show_paid_description(message: Message):
    user_id = message.from_user.id
    faq_state[user_id] = {"stage": 1, "answered": []}

    await message.answer(
        "<b>üéØ –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏ –ø–ª–∞—Ç–Ω–æ–≥–æ PDF:</b>\n\n"
        "‚Ä¢ 50+ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ –ø–æ —Ç–µ–º–∞–º:\n"
        "üìå –ö–æ–Ω—Ç–µ–Ω—Ç | üìå –ü—Ä–æ–¥–∞–∂–∏ | üìå –ë–∏–∑–Ω–µ—Å | üìå –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è\n"
        "üìå –õ–∏—á–Ω—ã–π –±—Ä–µ–Ω–¥ | üìå –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ | üìå WOW-–ø—Ä–æ–º–ø—Ç—ã\n\n"
        "‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è 10+ —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é\n"
        "‚Ä¢ –ü—Ä–æ–º–ø—Ç—ã = –º–∏–Ω–∏-–∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ –≤–∞—Å\n"
        "‚Ä¢ üéÅ –ë–æ–Ω—É—Å: –ß–µ–∫–ª–∏—Å—Ç ¬´–ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç —Å –ò–ò¬ª\n\n"
        "<b>üí° –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–º–ø—Ç–∞:</b>\n"
        "–ü—Ä–∏–¥—É–º–∞–π —É–ø–∞–∫–æ–≤–∫—É –ø—Ä–æ–¥—É–∫—Ç–∞ [–Ω–∞–∑–≤–∞–Ω–∏–µ], —á—Ç–æ–±—ã –æ–Ω –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–ª—Å—è –∫–∞–∫ ¬´—Ä–µ—à–µ–Ω–∏–µ ‚Ññ1¬ª –¥–ª—è [—Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏].\n\n"
        "–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å:\n"
        "‚Äì –º–æ—â–Ω—ã–π –æ—Ñ—Ñ–µ—Ä (—á—Ç–æ, –¥–ª—è –∫–æ–≥–æ, —Å –∫–∞–∫–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º, –∑–∞ —Å–∫–æ–ª—å–∫–æ)\n"
        "‚Äì 3 –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞, —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–∏—Ö —Ü–µ–Ω–Ω–æ—Å—Ç—å\n"
        "‚Äì –∫–æ—Ä–æ—Ç–∫–∏–π –º–∞–Ω–∏—Ñ–µ—Å—Ç –±—Ä–µ–Ω–¥–∞ (1 –∞–±–∑–∞—Ü): –±–æ–ª—å, –æ–±–µ—â–∞–Ω–∏–µ, –¥–æ–≤–µ—Ä–∏–µ\n\n"
        "–û—Ä–∏–µ–Ω—Ç–∏—Ä—É–π—Å—è –Ω–∞ —Å—Ç–∏–ª—å: [—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ / –ø—Ä–∞–≥–º–∞—Ç–∏—á–Ω–æ / –¥–µ—Ä–∑–∫–æ]\n"
        "–§–æ—Ä–º–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: —Ç–µ–∫—Å—Ç—ã, –≥–æ—Ç–æ–≤—ã–µ –¥–ª—è –ª–µ–Ω–¥–∏–Ω–≥–∞ –∏ —Å–æ—Ü—Å–µ—Ç–µ–π.\n\n"
        "<b>üí∞ –¶–µ–Ω–∞: 249 ‚ÇΩ</b>\n"
        "üìé PDF + –±–æ–Ω—É—Å –≤–Ω—É—Ç—Ä–∏, –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ª–∏—à–Ω–∏—Ö —à–∞–≥–æ–≤",
        parse_mode=ParseMode.HTML
    )

    await message.answer(
        "‚ùì <b>–û—Å—Ç–∞–ª–∏—Å—å —Å–æ–º–Ω–µ–Ω–∏—è?</b> –ù–∞–∂–º–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å:",
        reply_markup=generate_faq_keyboard(list(faq_stage_1.keys())),
        parse_mode=ParseMode.HTML
    )

    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëá",
        reply_markup=get_buy_or_back_keyboard()
    )

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è --- #
@router.callback_query(lambda c: c.data.startswith("faq_"))
async def handle_faq_callback(callback: CallbackQuery):
    user_id = callback.from_user.id
    user_data = faq_state.get(user_id)

    if not user_data:
        await callback.answer("–°–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É üìò –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏ –ø–ª–∞—Ç–Ω–æ–≥–æ PDF", show_alert=True)
        return

    stage = user_data["stage"]
    answered = user_data["answered"]

    block = faq_stage_1 if stage == 1 else faq_stage_2
    remaining_keys = [k for k in block.keys() if k not in answered]

    key = callback.data
    if key in answered:
        await callback.answer()
        return

    answered.append(key)
    remaining_keys.remove(key)

    await callback.message.answer(block[key])

    if remaining_keys:
        faq_state[user_id]["answered"] = answered
        await callback.message.answer(
            "üîÅ –ß—Ç–æ –µ—â—ë –º–æ–∂–µ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å?",
            reply_markup=generate_faq_keyboard(remaining_keys)
        )
    else:
        if stage == 1:
            faq_state[user_id]["stage"] = 2
            faq_state[user_id]["answered"] = []
            await callback.message.answer(
                "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å—ã!\n\nüìå –ê —Ç–µ–ø–µ—Ä—å ‚Äî –µ—â—ë –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤:",
                reply_markup=generate_faq_keyboard(list(faq_stage_2.keys()))
            )
        else:
            faq_state[user_id]["finished"] = True  # <--- –ó–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—à—ë–ª FAQ
            await callback.message.answer(
                "‚úÖ –í—Å–µ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è —Å–Ω—è—Ç—ã. –ü–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å!\n\nüëá –ó–∞–±–µ—Ä–∏ —Å–≤–æ–π –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π PDF:",
                reply_markup=get_payment_button()
            )
            await callback.message.answer(
                "‚¨ÖÔ∏è –ò–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é:",
                reply_markup=get_return_to_menu_keyboard()
            )
    await callback.answer()

@router.message(lambda msg: msg.text == "‚ú® –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã")
async def custom_prompts(message: Message):
    await message.answer(
        "üß† –û–ø–∏—à–∏ —Å–≤–æ—é –∑–∞–¥–∞—á—É ‚Äî –∏ —è –ø–æ–¥–≥–æ—Ç–æ–≤–ª—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–æ–¥ —Ç–µ–±—è.\n\n"
        "–ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —Ç–µ–º –ª—É—á—à–µ!\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
        "‚Äî –•–æ—á—É –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Instagram\n"
        "‚Äî –ù—É–∂–Ω—ã –∏–¥–µ–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∞\n"
        "‚Äî –•–æ—á—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å Excel –∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏",
    )


    await message.answer(
        "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Äî –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
        reply_markup=get_return_to_menu_keyboard()
    )

@router.message(lambda msg: msg.text == "üí≥ –ö—É–ø–∏—Ç—å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π PDF (249 ‚ÇΩ)")
async def handle_payment(message: Message):
    await message.answer(
        "üëâ <b>–û–ø–ª–∞—Ç–∏—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å PDF:</b>",
        parse_mode=ParseMode.HTML,
        reply_markup=get_payment_button()  # –∏–Ω–ª–∞–π–Ω-—Å—Å—ã–ª–∫–∞
    )

    await message.answer(
        "‚¨ÖÔ∏è –ò–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é:",
        reply_markup=get_return_to_menu_keyboard()  # —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞
    )




# --- –ó–∞–ø—É—Å–∫ --- #
async def main():
    logging.basicConfig(level=logging.INFO)
    dp.include_router(router)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
