import asyncio
import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import Router
from aiogram.filters import Command

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
API_TOKEN = os.environ.get("BOT_TOKEN")
if not API_TOKEN:
    raise RuntimeError("BOT_TOKEN is not set")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())
router = Router()


# --- –ö–Ω–æ–ø–∫–∏ --- #
def get_main_keyboard():
    kb = ReplyKeyboardBuilder()
    kb.button(text="üìÑ –°–∫–∞—á–∞—Ç—å PDF")
    kb.button(text="üí≥ –ö—É–ø–∏—Ç—å 50+ –ø—Ä–æ–º–ø—Ç–æ–≤")
    kb.button(text="‚ú® –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã")
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)


# --- –•–µ–Ω–¥–ª–µ—Ä—ã --- #
@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ. –ü–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π PDF —Å 10 –ø—Ä–æ–º–ø—Ç–∞–º–∏ –∏ –Ω–∞—á–Ω–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!",
        reply_markup=get_main_keyboard()
    )

@router.message(lambda msg: msg.text == "üìÑ –°–∫–∞—á–∞—Ç—å PDF")
async def send_pdf(message: Message):
    with open("data/–ö–æ–≤–∞–ª–µ–≤—Å–∫–∏–π –°–µ—Ä–≥–µ–π.pdf", "rb") as file:
        await message.answer_document(file, caption="–í–æ—Ç —Ç–≤–æ–π PDF —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ üöÄ")

@router.message(lambda msg: msg.text == "üí≥ –ö—É–ø–∏—Ç—å 50+ –ø—Ä–æ–º–ø—Ç–æ–≤")
async def buy_prompts(message: Message):
    await message.answer(
        "–î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞–±–æ—Ä–∞ –∏–∑ 50+ –ø—Ä–æ–º–ø—Ç–æ–≤ –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –æ—Ñ–æ—Ä–º–∏ –æ–ø–ª–∞—Ç—É: \n\nhttps://boosty.to/your-link\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–ø–∏—à–∏ —Å—é–¥–∞, –∏ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø üöÄ"
    )

@router.message(lambda msg: msg.text == "‚ú® –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã")
async def custom_prompts(message: Message):
    await message.answer(
        "–û–ø–∏—à–∏ —Å–≤–æ—é –∑–∞–¥–∞—á—É ‚Äî –∏ —è –ø–æ–¥–≥–æ—Ç–æ–≤–ª—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–æ–¥ —Ç–µ–±—è. –ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —Ç–µ–º –ª—É—á—à–µ!"
    )


# --- –ó–∞–ø—É—Å–∫ --- #
async def main():
    logging.basicConfig(level=logging.INFO)
    dp.include_router(router)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
